#! /usr/bin/python

import sys, ogr, os

INFILE = sys.argv[1]

if not os.path.exists(INFILE):
    print "usage: dumpparcels INFILE.shp"
    sys.exit(-1)

ds = ogr.Open( INFILE )
if ds is None:
    print "Open failed.\n"
    sys.exit( 1 )

if ds.GetLayerCount() < 1:
    print "No layers found in input file"
    sys.exit( 1 )

lyr = ds.GetLayer(0)

numFeatures = lyr.GetFeatureCount()

for i in range(0,numFeatures):
    feat = lyr.GetFeature(i)
    f = {
        'pin'           : feat.GetFieldAsString("PIN"),
        'pinnum'        : feat.GetFieldAsString("PINNUM"),
        'housenumber'   : feat.GetFieldAsString("HOUSENUMBE"),
        'streetname'    : feat.GetFieldAsString("STREETNAME"),
        'streettype'    : feat.GetFieldAsString("STREETTYPE"),
        'township'      : feat.GetFieldAsString("TOWNSHIP"),
        'zipcode'       : feat.GetFieldAsString("ZIPCODE")
    }
    print "%s|%s|%s|%s|%s|%s|%s" % (f['pin'], f['pinnum'], f['housenumber'],
                                    f['streetname'], f['streettype'], f['township'], f['zipcode'])

#
#    PINNUM			String (50.0)
#    PIN				String (15.0)
#    PINEXT			String (50.0)
#    OWNER			String (50.0)
#    NMPTYPE			Integer (10.0)
#    TAXYEAR			String (50.0)
#    CONDOUNIT		String (50.0)
#    CONDOBUILD		String (50.0)
#    DEEDBOOK		String (50.0)
#    DEEDPAGE		String (50.0)
#    PLATBOOK		String (50.0)
#    PLATPAGE		String (50.0)
#    SUBNAME			String (50.0)
#    SUBLOT			String (50.0)
#    SUBBLOCK		String (50.0)
#    SUBSECT			String (50.0)
#    UPDATEDATE		String (50.0)
#    HOUSENUMBE		String (50.0)
#    NUMBERSUFF		String (50.0)
#    DIRECTION		String (50.0)
#    STREETNAME		String (50.0)
#    STREETTYPE		String (50.0)
#    TOWNSHIP		String (50.0)
#    ACREAGE			Real (19.8)
#    ACCOUNTNUM		String (50.0)
#    DEEDDATE		String (50.0)
#    STAMPS			Real (19.8)
#    INSTRUMENT		String (50.0)
#    REASON			String (50.0)
#    COUNTY			String (50.0)
#    CITY			String (50.0)
#    FIREDISTRI		String (50.0)
#    SCHOOLDIST		String (50.0)
#    AUTHORITY		String (4.0)
#    CAREOF			String (50.0)
#    ADDRESS			String (50.0)
#    CITYNAME		String (50.0)
#    STATE			String (50.0)
#    ZIPCODE			String (50.0)
#    CLASS			String (50.0)
#    IMPROVED		String (50.0)
#    EXEMPT			String (50.0)
#    PRICED			String (50.0)
#    TOTALMARKE		Integer (10.0)
#    APPRAISEDV		Integer (10.0)
#    TAXVALUE		Integer (10.0)
#    LANDUSE			String (50.0)
#    NEIGHBORHO		String (50.0)
#    LANDVALUE		Integer (10.0)
#    BUILDINGVA		Integer (10.0)
#    IMPROVEMEN		Integer (10.0)
#    APPRAISALA		String (50.0)
#    STATE_ROUT		String (50.0)
#    STATE_RO_1		String (50.0)
#    PROPCARD		String (150.0)
#    Shape_area		Real (19.11)
#    Shape_len		Real (19.11)
#
#
#
#
#lyr = ds.GetLayerByName( "point" )
#
#lyr.ResetReading()
#
#for feat in lyr:
#
#    feat_defn = lyr.GetLayerDefn()
#    for i in range(feat_defn.GetFieldCount()):
#        field_defn = feat_defn.GetFieldDefn(i)
#
#        # Tests below can be simplified with just :
#        # print feat.GetField(i)
#        if field_defn.GetType() == ogr.OFTInteger:
#            print "%d" % feat.GetFieldAsInteger(i)
#        elif field_defn.GetType() == ogr.OFTReal:
#            print "%.3f" % feat.GetFieldAsDouble(i)
#        elif field_defn.GetType() == ogr.OFTString:
#            print "%s" % feat.GetFieldAsString(i)
#        else:
#            print "%s" % feat.GetFieldAsString(i)
#
#    geom = feat.GetGeometryRef()
#    if geom is not None and geom.GetGeometryType() == ogr.wkbPoint:
#        print "%.3f, %.3f" % ( geom.GetX(), geom.GetY() )
#    else:
#        print "no point geometry\n"
#
#ds = None
#
